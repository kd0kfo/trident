#!/usr/bin/env python

"""
Breaks up microrna files into arbitrarily smaller sizes

Requires an input sequence, an output file prefix and a 
chunk size (number of 70-character lines).
"""


def error_out(msg):
    print(msg)
    exit(1)

def main():
    from getopt import getopt
    from sys import argv
    from trident.mirna_chopper import chopper
    
    (optlist, args) = getopt(argv[1:],'s:',['species='])
    specific_species = None

    for (opt, val) in optlist:
        while opt[0] == '-':
            opt = opt[1:]
        if opt in ['s', 'species']:
            specific_species = val
        else:
            print("Unknown option: '%s'" % opt)

    if len(args) < 2:
        error_out("Usage: %s <filename> <number of mirna's>" % argv[0])

    filename = args[0]
    mirna_count = int(args[1])
    if mirna_count < 0:
        error_out("Invalid size. Must be a positive integer")

    num_files = chopper(filename,mirna_count,specific_species)
    print("Divided %s into %d segments" % (filename, num_files))


if __name__ == "__main__":
    main()

